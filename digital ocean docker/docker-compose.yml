services:
  # Nginx Reverse Proxy (Public Network)
  nginx:
    image: nginx:alpine
    container_name: viworks-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - viworks-public
      - viworks-internal
    restart: unless-stopped
    init: true
    healthcheck:
      test: ["CMD-SHELL", "nginx -t && wget -qO- http://localhost/_health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - backend
      - frontend
      - website

  # PostgreSQL Database (Internal Network Only)
  postgres:
    image: postgres:15-alpine
    container_name: viworks-postgres
    environment:
      POSTGRES_DB: viworks
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-viworks_password_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - viworks-internal
    init: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d viworks"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Redis Cache (Internal Network Only)
  redis:
    image: redis:7-alpine
    container_name: viworks-redis
    volumes:
      - redis_data:/data
    networks:
      - viworks-internal
    init: true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Backend API Server (Internal Network Only)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.fixed
    container_name: viworks-backend
    env_file:
      - ./env.backend
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - viworks-internal
    restart: unless-stopped
    init: true
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8081/_healthz || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Frontend Next.js App (Internal Network Only)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: viworks-frontend
    env_file:
      - ./env.frontend
      - ./frontend/admin-auth.env
    depends_on:
      - backend
    networks:
      - viworks-internal
    restart: unless-stopped
    init: true
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/_healthz || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Website (Internal Network Only)
  website:
    build:
      context: ../websitejadid
      dockerfile: Dockerfile
    container_name: viworks-website
    env_file:
      - ./env.website
    networks:
      - viworks-internal
    restart: unless-stopped
    init: true
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ | head -1 || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # ViWorks Agent (Internal Network Only) - DISABLED FOR NOW
  # agent:
  #   build:
  #     context: ../os agent
  #     dockerfile: Dockerfile.alpine-production
  #   container_name: viworks-agent
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - RUST_LOG=info
  #     - AGENT_CONFIG=/etc/viworks/agent.toml
  #   networks:
  #     - viworks-internal
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8443/api/v1/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  # Public network - only nginx is exposed
  viworks-public:
    external: true
    name: viworks-public
  
  # Internal network - all services communicate here
  viworks-internal:
    external: true
    name: viworks-internal
