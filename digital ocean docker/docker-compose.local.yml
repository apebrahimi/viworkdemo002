version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: viworks-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: viworks_admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and session management
  redis:
    image: redis:7
    container_name: viworks-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: viworks-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - HOST=0.0.0.0
      - PORT=8081
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/viworks_admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-key-change-in-production-env
      - JWT_EXPIRATION=3600
      - ADMIN_JWT_SECRET=dev-admin-jwt-secret-key-change-in-production-env
      - ADMIN_JWT_EXPIRATION=900
      - ADMIN_SESSION_TIMEOUT=900
      - ADMIN_IP_ALLOWLIST=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,127.0.0.1/32
      - ADMIN_REALM_ENFORCED=true
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - RUST_LOG=info
    volumes:
      - ./backend:/app
    command: ["cargo", "run", "--bin", "viworks-admin-backend"]

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: viworks-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8081
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: ["npm", "run", "dev"]

  # Nginx for local testing
  nginx:
    image: nginx:alpine
    container_name: viworks-nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx-local.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data:
  redis_data:
