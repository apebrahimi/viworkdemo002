name: Deploy Multiple Applications

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'viworks-frontend/**'
      - 'viworksclient01/products/admin-panel/**'
      - 'websitejadid/**'
      - 'viworks-deployment/**'
  workflow_dispatch:
    inputs:
      apps:
        description: 'Applications to deploy (comma-separated)'
        required: true
        default: 'viworks,admin-panel,website'
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development
      rollback:
        description: 'Rollback to previous version'
        required: false
        default: false
        type: boolean

env:
  DROPLET_IP: ${{ secrets.DROPLET_IP }}
  DROPLET_USER: ${{ secrets.DROPLET_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts
          
      - name: Test SSH connection
        run: |
          ssh -o ConnectTimeout=10 -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "echo 'SSH connection successful'"
          
      - name: Create multi-app deployment script
        run: |
          cat > deploy-multi.sh << 'EOF'
          #!/bin/bash
          set -e
          
          APP_DIR="/opt/viworks"
          APPS="${{ github.event.inputs.apps || 'viworks,admin-panel,website' }}"
          ENVIRONMENT="${{ github.event.inputs.environment || 'production' }}"
          ROLLBACK="${{ github.event.inputs.rollback || 'false' }}"
          
          echo "🚀 Starting multi-application deployment..."
          echo "📱 Applications: $APPS"
          echo "🌍 Environment: $ENVIRONMENT"
          echo "🔄 Rollback: $ROLLBACK"
          
          cd $APP_DIR
          
          # Create backup before deployment
          if [ "$ROLLBACK" != "true" ]; then
            echo "💾 Creating backup..."
            docker-compose ps > /tmp/pre-deployment-status.txt
            docker images > /tmp/pre-deployment-images.txt
          fi
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git fetch origin
          git pull origin ${{ github.ref_name }}
          
          # Parse applications
          IFS=',' read -ra APP_ARRAY <<< "$APPS"
          
          for app in "${APP_ARRAY[@]}"; do
            echo "🔨 Deploying $app..."
            
            case $app in
              "viworks")
                echo "  - Deploying full ViWorks stack..."
                docker-compose down || true
                docker-compose up -d --build
                ;;
              "admin-panel")
                echo "  - Deploying admin panel..."
                docker-compose stop admin-frontend backend || true
                docker-compose up -d --build admin-frontend backend
                ;;
              "frontend")
                echo "  - Deploying main frontend..."
                docker-compose stop frontend || true
                docker-compose up -d --build frontend
                ;;
              "backend")
                echo "  - Deploying backend..."
                docker-compose stop backend || true
                docker-compose up -d --build backend
                ;;
              "website")
                echo "  - Deploying website..."
                if [ -d "websitejadid" ]; then
                  cd websitejadid/viworks
                  npm install
                  npm run build
                  cd ../..
                fi
                docker-compose stop frontend || true
                docker-compose up -d --build frontend
                ;;
            esac
            
            echo "  ✅ $app deployment completed"
          done
          
          # Wait for services
          echo "⏳ Waiting for services to be ready..."
          sleep 30
          
          # Check status
          echo "📊 Service status:"
          docker-compose ps
          
          # Health checks
          echo "🧪 Running health checks..."
          for app in "${APP_ARRAY[@]}"; do
            case $app in
              "viworks"|"frontend")
                curl -f http://localhost || echo "  ❌ Main frontend health check failed"
                ;;
              "admin-panel"|"backend")
                curl -f http://localhost/admin || echo "  ❌ Admin panel health check failed"
                curl -f http://localhost/api/health || echo "  ❌ Backend health check failed"
                ;;
              "website")
                curl -f http://localhost || echo "  ❌ Website health check failed"
                ;;
            esac
          done
          
          echo "✅ Multi-application deployment completed!"
          EOF
          
          chmod +x deploy-multi.sh
          
      - name: Upload and execute deployment script
        run: |
          scp -i ~/.ssh/id_ed25519 deploy-multi.sh ${DROPLET_USER}@${DROPLET_IP}:/tmp/
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "chmod +x /tmp/deploy-multi.sh && /tmp/deploy-multi.sh"
          
      - name: Verify deployment
        run: |
          echo "🔍 Verifying deployment..."
          sleep 15
          
          APPS="${{ github.event.inputs.apps || 'viworks,admin-panel,website' }}"
          IFS=',' read -ra APP_ARRAY <<< "$APPS"
          
          for app in "${APP_ARRAY[@]}"; do
            case $app in
              "viworks"|"frontend"|"website")
                curl -f http://${DROPLET_IP} && echo "✅ Main frontend/website verified" || echo "❌ Main frontend/website verification failed"
                ;;
              "admin-panel"|"backend")
                curl -f http://${DROPLET_IP}/admin && echo "✅ Admin panel verified" || echo "❌ Admin panel verification failed"
                curl -f http://${DROPLET_IP}/api/health && echo "✅ Backend verified" || echo "❌ Backend verification failed"
                ;;
            esac
          done
          
      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "🎉 Multi-application deployment successful!"
            echo "📱 Deployed apps: ${{ github.event.inputs.apps || 'viworks,admin-panel,website' }}"
            echo "🌍 Environment: ${{ github.event.inputs.environment || 'production' }}"
            echo "🌐 Application URL: http://${DROPLET_IP}"
          else
            echo "❌ Deployment failed. Check the logs above for details."
          fi
