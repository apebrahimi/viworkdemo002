name: Test Deployment Setup

on:
  workflow_dispatch:

env:
  DROPLET_IP: ${{ secrets.DROPLET_IP }}
  DROPLET_USER: ${{ secrets.DROPLET_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts
          
      - name: Test SSH connection
        run: |
          echo "üîç Testing SSH connection to $DROPLET_IP..."
          ssh -o ConnectTimeout=10 -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "echo 'SSH connection test successful'"
          echo "‚úÖ SSH connection successful!"
          
      - name: Check Docker status
        run: |
          echo "üîç Checking Docker installation..."
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "docker --version"
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "docker-compose --version"
          echo "‚úÖ Docker and Docker Compose are installed!"
          
      - name: Check application directory
        run: |
          echo "üîç Checking application directory structure..."
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "ls -la /opt/viworks/"
          echo "‚úÖ Application directory found!"
          
      - name: Check Docker containers
        run: |
          echo "üîç Checking running Docker containers..."
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "cd /opt/viworks && docker-compose ps"
          echo "‚úÖ Docker containers are running!"
          
      - name: Test web endpoints
        run: |
          echo "üîç Testing web endpoints..."
          sleep 5
          
          # Test nginx health endpoint
          if curl -f http://${DROPLET_IP}/health; then
            echo "‚úÖ Nginx health endpoint is working!"
          else
            echo "‚ö†Ô∏è  Nginx health endpoint not responding"
          fi
          
          # Test main endpoint
          if curl -f http://${DROPLET_IP}/; then
            echo "‚úÖ Main endpoint is working!"
          else
            echo "‚ö†Ô∏è  Main endpoint not responding"
          fi
          
      - name: Check system resources
        run: |
          echo "üîç Checking system resources..."
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "df -h /"
          ssh -i ~/.ssh/id_ed25519 ${DROPLET_USER}@${DROPLET_IP} "free -h"
          echo "‚úÖ System resources checked!"
          
      - name: Success message
        run: |
          echo "üéâ All tests passed! Your CI/CD setup is working correctly."
          echo "üåê Your application should be accessible at: http://${DROPLET_IP}"
          echo ""
          echo "üìã Summary:"
          echo "‚úÖ SSH connection: Working"
          echo "‚úÖ Docker: Installed and running"
          echo "‚úÖ Docker Compose: Installed and working"
          echo "‚úÖ Application directory: Ready"
          echo "‚úÖ Web endpoints: Accessible"
          echo "‚úÖ System resources: Available"
          echo ""
          echo "üöÄ You can now use the other deployment workflows!"
          echo "‚Ä¢ Push to main branch for automatic deployment"
          echo "‚Ä¢ Use manual triggers for specific applications"
          echo "‚Ä¢ Deploy multiple applications at once"
