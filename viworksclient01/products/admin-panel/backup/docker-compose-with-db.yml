services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: viworks-postgres
    environment:
      POSTGRES_DB: viworks_admin
      POSTGRES_USER: viworks_user
      POSTGRES_PASSWORD: secure_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"  # Only bind to localhost for security
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U viworks_user -d viworks_admin -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - viworks-local-network
    restart: unless-stopped
    profiles: ["debug", "prod"]

  # Redis Cache
  redis:
    image: redis:8.2.1-alpine
    container_name: viworks-redis
    command: ["redis-server", "--requirepass", "secure_redis_password"]
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"  # Only bind to localhost for security
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "secure_redis_password", "PING"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - viworks-local-network
    restart: unless-stopped
    profiles: ["debug", "prod"]



  # Backend API (Rust) - Debug Profile (Development)
  backend-debug:
    build:
      context: ./viworks-backend
      dockerfile: Dockerfile
    image: viworks/backend:debug
    container_name: viworks-backend-debug
    ports:
      - "8081:8081"
    environment:
      - HOST=0.0.0.0
      - PORT=8081
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
      - JWT_SECRET=local_development_jwt_secret_key
      - JWT_EXPIRATION=3600
      - BCRYPT_COST=12
      - CORS_ORIGINS=http://localhost:3000
      - ADMIN_PANEL_URL=http://localhost:3000
      - API_BASE_URL=http://localhost:8081
      # Database configuration
      - DATABASE_URL=postgresql://viworks_user:secure_password_change_me@postgres:5432/viworks_admin
      - REDIS_URL=redis://:secure_redis_password@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - viworks-local-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8081/health"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: "no"  # IMPORTANT in debug to avoid silent loops
    profiles: ["debug"]

  # Backend API (Rust) - Production Profile
  backend:
    build:
      context: ./viworks-backend
      dockerfile: Dockerfile
    image: viworks/backend:prod
    container_name: viworks-backend-prod
    ports:
      - "8081:8081"
    environment:
      - HOST=0.0.0.0
      - PORT=8081
      - RUST_LOG=info
      - RUST_BACKTRACE=0
      - JWT_SECRET=production_jwt_secret_key_change_in_production
      - JWT_EXPIRATION=3600
      - BCRYPT_COST=12
      - CORS_ORIGINS=http://localhost:3000
      - ADMIN_PANEL_URL=http://localhost:3000
      - API_BASE_URL=http://localhost:8081
      # Database configuration
      - DATABASE_URL=postgresql://viworks_user:secure_password_change_me@postgres:5432/viworks_admin
      - REDIS_URL=redis://:secure_redis_password@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - viworks-local-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    profiles: ["prod"]

  # Frontend (Next.js) - Development Profile
  frontend:
    build:
      context: ./viworks-frontend
      dockerfile: Dockerfile
    container_name: viworks-frontend-local
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8081
      - NEXT_PUBLIC_WS_URL=ws://localhost:8081
      - PORT=3000
    depends_on:
      backend-debug:
        condition: service_healthy
    networks:
      - viworks-local-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    profiles: ["debug"]

  # Frontend (Next.js) - Production Profile
  frontend-prod:
    build:
      context: ./viworks-frontend
      dockerfile: Dockerfile
    container_name: viworks-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8081
      - NEXT_PUBLIC_WS_URL=ws://localhost:8081
      - PORT=3000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - viworks-local-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    profiles: ["prod"]

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  viworks-local-network:
    driver: bridge
