ViWorkS Security Audit Report - Sat Aug 30 10:41:45 BST 2025
=======================================

Cargo Audit Status:
[0m[0m[1m[32m    Fetching[0m advisory database from `https://github.com/RustSec/advisory-db.git`
[0m[0m[1m[32m      Loaded[0m 799 security advisories (from /Users/abolfazl/.cargo/advisory-db)
[0m[0m[1m[32m    Updating[0m crates.io index
[0m[0m[1m[32m    Scanning[0m Cargo.lock for vulnerabilities (324 crate dependencies)
[0m[0m[1m[31mCrate:    [0m rsa
[0m[0m[1m[31mVersion:  [0m 0.9.8
[0m[0m[1m[31mTitle:    [0m Marvin Attack: potential key recovery through timing sidechannels
[0m[0m[1m[31mDate:     [0m 2023-11-22
[0m[0m[1m[31mID:       [0m RUSTSEC-2023-0071
[0m[0m[1m[31mURL:      [0m https://rustsec.org/advisories/RUSTSEC-2023-0071
[0m[0m[1m[31mSeverity: [0m 5.9 (medium)
[0m[0m[1m[31mSolution: [0m No fixed upgrade is available!
[0m[0m[1m[31mDependency tree:
[0mrsa 0.9.8
â””â”€â”€ sqlx-mysql 0.8.6
    â”œâ”€â”€ sqlx-macros-core 0.8.6
    â”‚   â””â”€â”€ sqlx-macros 0.8.6
    â”‚       â””â”€â”€ sqlx 0.8.6
    â”‚           â””â”€â”€ viworks-admin-backend 0.1.0
    â””â”€â”€ sqlx 0.8.6

[0m[0m[1m[31merror:[0m 1 vulnerability found!
Vulnerabilities found

Dependency Tree Check:
MySQL dependencies: 0
RSA dependencies: 0

SQLx Configuration:
uuid = { version = "1.0", features = ["v4", "serde"] }
once_cell = "1.0"

# Database dependencies - PostgreSQL only (excludes MySQL to avoid RSA vulnerability)
# Keeping 'derive' feature as code heavily depends on it, but monitoring for security
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid", "json", "derive"], default-features = false }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }

# Additional utilities
bcrypt = "0.15"
jsonwebtoken = "9.3"
anyhow = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Note: RSA vulnerability is in sqlx-mysql dependency which we don't use
# We only use PostgreSQL features, so this vulnerability doesn't affect us

[profile.release]
opt-level = 2
lto = true
