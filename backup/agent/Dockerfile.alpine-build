FROM rust:1.75-alpine

# Install build dependencies
RUN apk update && apk add --no-cache \
    build-base \
    pkgconfig \
    openssl-dev \
    musl-dev \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy Cargo files
COPY Cargo.toml Cargo.lock ./

# Create dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies
RUN cargo build --release

# Remove dummy main.rs and copy actual source
RUN rm src/main.rs
COPY src/ ./src/

# Build the application (skip clippy for now)
RUN cargo build --release

# Create a minimal runtime image
FROM alpine:latest

# Install runtime dependencies
RUN apk update && apk add --no-cache \
    ca-certificates \
    libssl3 \
    && rm -rf /var/cache/apk/*

# Create viworks user
RUN addgroup -g 1000 viworks && \
    adduser -D -s /bin/bash -u 1000 -G viworks viworks

# Create necessary directories
RUN mkdir -p /etc/viworks /var/log/viworks /usr/local/bin

# Copy binary from builder
COPY --from=0 /app/target/release/viworks-gateway-agent /usr/local/bin/

# Copy configuration
COPY agent.toml /etc/viworks/

# Set permissions
RUN chown -R viworks:viworks /etc/viworks /var/log/viworks
RUN chmod +x /usr/local/bin/viworks-gateway-agent

# Switch to viworks user
USER viworks

# Expose port
EXPOSE 8443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8443/api/v1/health || exit 1

# Run the agent
CMD ["/usr/local/bin/viworks-gateway-agent"]
